package com.lwm.springcloud.entities;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table record
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table record
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table record
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public RecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table record
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table record
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRedsquareIsNull() {
            addCriterion("redsquare is null");
            return (Criteria) this;
        }

        public Criteria andRedsquareIsNotNull() {
            addCriterion("redsquare is not null");
            return (Criteria) this;
        }

        public Criteria andRedsquareEqualTo(Integer value) {
            addCriterion("redsquare =", value, "redsquare");
            return (Criteria) this;
        }

        public Criteria andRedsquareNotEqualTo(Integer value) {
            addCriterion("redsquare <>", value, "redsquare");
            return (Criteria) this;
        }

        public Criteria andRedsquareGreaterThan(Integer value) {
            addCriterion("redsquare >", value, "redsquare");
            return (Criteria) this;
        }

        public Criteria andRedsquareGreaterThanOrEqualTo(Integer value) {
            addCriterion("redsquare >=", value, "redsquare");
            return (Criteria) this;
        }

        public Criteria andRedsquareLessThan(Integer value) {
            addCriterion("redsquare <", value, "redsquare");
            return (Criteria) this;
        }

        public Criteria andRedsquareLessThanOrEqualTo(Integer value) {
            addCriterion("redsquare <=", value, "redsquare");
            return (Criteria) this;
        }

        public Criteria andRedsquareIn(List<Integer> values) {
            addCriterion("redsquare in", values, "redsquare");
            return (Criteria) this;
        }

        public Criteria andRedsquareNotIn(List<Integer> values) {
            addCriterion("redsquare not in", values, "redsquare");
            return (Criteria) this;
        }

        public Criteria andRedsquareBetween(Integer value1, Integer value2) {
            addCriterion("redsquare between", value1, value2, "redsquare");
            return (Criteria) this;
        }

        public Criteria andRedsquareNotBetween(Integer value1, Integer value2) {
            addCriterion("redsquare not between", value1, value2, "redsquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareIsNull() {
            addCriterion("bluesquare is null");
            return (Criteria) this;
        }

        public Criteria andBluesquareIsNotNull() {
            addCriterion("bluesquare is not null");
            return (Criteria) this;
        }

        public Criteria andBluesquareEqualTo(Integer value) {
            addCriterion("bluesquare =", value, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareNotEqualTo(Integer value) {
            addCriterion("bluesquare <>", value, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareGreaterThan(Integer value) {
            addCriterion("bluesquare >", value, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareGreaterThanOrEqualTo(Integer value) {
            addCriterion("bluesquare >=", value, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareLessThan(Integer value) {
            addCriterion("bluesquare <", value, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareLessThanOrEqualTo(Integer value) {
            addCriterion("bluesquare <=", value, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareIn(List<Integer> values) {
            addCriterion("bluesquare in", values, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareNotIn(List<Integer> values) {
            addCriterion("bluesquare not in", values, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareBetween(Integer value1, Integer value2) {
            addCriterion("bluesquare between", value1, value2, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBluesquareNotBetween(Integer value1, Integer value2) {
            addCriterion("bluesquare not between", value1, value2, "bluesquare");
            return (Criteria) this;
        }

        public Criteria andBattletimeIsNull() {
            addCriterion("battletime is null");
            return (Criteria) this;
        }

        public Criteria andBattletimeIsNotNull() {
            addCriterion("battletime is not null");
            return (Criteria) this;
        }

        public Criteria andBattletimeEqualTo(Date value) {
            addCriterion("battletime =", value, "battletime");
            return (Criteria) this;
        }

        public Criteria andBattletimeNotEqualTo(Date value) {
            addCriterion("battletime <>", value, "battletime");
            return (Criteria) this;
        }

        public Criteria andBattletimeGreaterThan(Date value) {
            addCriterion("battletime >", value, "battletime");
            return (Criteria) this;
        }

        public Criteria andBattletimeGreaterThanOrEqualTo(Date value) {
            addCriterion("battletime >=", value, "battletime");
            return (Criteria) this;
        }

        public Criteria andBattletimeLessThan(Date value) {
            addCriterion("battletime <", value, "battletime");
            return (Criteria) this;
        }

        public Criteria andBattletimeLessThanOrEqualTo(Date value) {
            addCriterion("battletime <=", value, "battletime");
            return (Criteria) this;
        }

        public Criteria andBattletimeIn(List<Date> values) {
            addCriterion("battletime in", values, "battletime");
            return (Criteria) this;
        }

        public Criteria andBattletimeNotIn(List<Date> values) {
            addCriterion("battletime not in", values, "battletime");
            return (Criteria) this;
        }

        public Criteria andBattletimeBetween(Date value1, Date value2) {
            addCriterion("battletime between", value1, value2, "battletime");
            return (Criteria) this;
        }

        public Criteria andBattletimeNotBetween(Date value1, Date value2) {
            addCriterion("battletime not between", value1, value2, "battletime");
            return (Criteria) this;
        }

        public Criteria andWinnerIsNull() {
            addCriterion("winner is null");
            return (Criteria) this;
        }

        public Criteria andWinnerIsNotNull() {
            addCriterion("winner is not null");
            return (Criteria) this;
        }

        public Criteria andWinnerEqualTo(String value) {
            addCriterion("winner =", value, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerNotEqualTo(String value) {
            addCriterion("winner <>", value, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerGreaterThan(String value) {
            addCriterion("winner >", value, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerGreaterThanOrEqualTo(String value) {
            addCriterion("winner >=", value, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerLessThan(String value) {
            addCriterion("winner <", value, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerLessThanOrEqualTo(String value) {
            addCriterion("winner <=", value, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerLike(String value) {
            addCriterion("winner like", value, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerNotLike(String value) {
            addCriterion("winner not like", value, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerIn(List<String> values) {
            addCriterion("winner in", values, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerNotIn(List<String> values) {
            addCriterion("winner not in", values, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerBetween(String value1, String value2) {
            addCriterion("winner between", value1, value2, "winner");
            return (Criteria) this;
        }

        public Criteria andWinnerNotBetween(String value1, String value2) {
            addCriterion("winner not between", value1, value2, "winner");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table record
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table record
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}